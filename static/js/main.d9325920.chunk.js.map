{"version":3,"sources":["Assets/dankMemer.png","Assets/trollFace.png","components/Header.js","components/MemeGenerator.js","container/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","dankMemer","alt","trollFace","MemeGenerator","state","topText","middleText","bottomText","top1","top2","top3","left1","left2","left3","color1","color2","color3","size1","size2","size3","randomImage","memeImages","handleChange","bind","handleClick","fetch","then","response","json","datas","setState","data","memes","event","target","value","name","this","preventDefault","random","parseInt","Math","length","randomMeme","url","styles","styles1","position","top","left","color","fontSize","styles2","styles3","type","placeholder","onChange","step","onClick","style","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9325920.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dankMemer.864ef7a1.png\";","export default __webpack_public_path__ + \"static/media/trollFace.3ffd1627.png\";","import React from 'react'\r\nimport './Header.css'\r\nimport dankMemer from '../Assets/dankMemer.png'\r\nimport trollFace from '../Assets/trollFace.png'\r\n\r\nfunction Header() {\r\n   return (\r\n      <header className=\"head\">\r\n         <img \r\n            src={dankMemer} \r\n            alt=\"DankMemer\" \r\n         />\r\n         <h1>MEME GENERATOR</h1>\r\n         <img \r\n            src={trollFace} \r\n            alt=\"TrollFace\" \r\n         />\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './MemeGenerator.css'\r\n\r\nclass MemeGenerator extends React.Component {\r\n   constructor() {\r\n      super()\r\n      this.state = {\r\n         topText: \"\",\r\n         middleText: \"\",\r\n         bottomText: \"\",\r\n         top1: \"\",\r\n         top2: \"\",\r\n         top3: \"\",\r\n         left1: \"\",\r\n         left2: \"\",\r\n         left3: \"\",\r\n         color1: \"#000000\",\r\n         color2: \"#000000\",\r\n         color3: \"#000000\",\r\n         size1: \"\",\r\n         size2: \"\",\r\n         size3: \"\",\r\n         randomImage: \"\",\r\n         memeImages: []\r\n      }\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleClick = this.handleClick.bind(this)\r\n   }\r\n\r\n   componentDidMount() {\r\n      fetch(\"https://api.imgflip.com/get_memes\")\r\n         .then(response => response.json())\r\n         .then(datas => {\r\n            this.setState({\r\n               memeImages: datas.data.memes\r\n            })\r\n         })\r\n   }\r\n\r\n   handleChange(event){\r\n      const {value, name} = event.target\r\n      this.setState({\r\n         [name]: value\r\n      })\r\n   }\r\n\r\n   handleClick(event){\r\n      event.preventDefault()\r\n      const random = parseInt((Math.random() * this.state.memeImages.length))\r\n      const randomMeme = this.state.memeImages[random].url\r\n      this.setState({\r\n         randomImage: randomMeme\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const styles = {\r\n         styles1: {\r\n            position: \"absolute\",\r\n            top: `${this.state.top1}px`,\r\n            left: `${this.state.left1}px`,\r\n            color: this.state.color1,\r\n            fontSize: `${this.state.size1}px`\r\n         },\r\n         styles2: {\r\n            position: \"absolute\",\r\n            top: `${this.state.top2}px`,\r\n            left: `${this.state.left2}px`,\r\n            color: this.state.color2,\r\n            fontSize: `${this.state.size2}px`\r\n         },\r\n         styles3: {\r\n            position: \"absolute\",\r\n            top: `${this.state.top3}px`,\r\n            left: `${this.state.left3}px`,\r\n            color: this.state.color3,\r\n            fontSize: `${this.state.size3}px`\r\n         }\r\n      }\r\n      const {styles1, styles2, styles3} = styles\r\n      return(\r\n         <div>\r\n            <form className=\"text-form\">\r\n               <input\r\n                  className=\"text1\"\r\n                  type=\"text\"\r\n                  placeholder=\"Top Text\"\r\n                  name=\"topText\"\r\n                  value={this.state.topText}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <input\r\n                  placeholder=\"from top\"\r\n                  type=\"number\"\r\n                  step=\"5\"\r\n                  name=\"top1\"\r\n                  value={this.state.top1}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <input\r\n                  placeholder=\"from left\"\r\n                  type=\"number\"\r\n                  step=\"5\"\r\n                  name=\"left1\"\r\n                  value={this.state.left1}\r\n                  onChange={this.handleChange}\r\n               />    \r\n               <input\r\n                  placeholder=\"font size\"\r\n                  type=\"number\"\r\n                  step=\"2\"\r\n                  name=\"size1\"\r\n                  value={this.state.size1}\r\n                  onChange={this.handleChange}\r\n               />  \r\n               <input\r\n                  type=\"color\"\r\n                  name=\"color1\"\r\n                  value={this.state.color1}\r\n                  onChange={this.handleChange}\r\n               /> \r\n               <button className=\"submit\" onClick={this.handleClick}>Generate</button>     \r\n               <input\r\n                  className=\"text2\"\r\n                  type=\"text\"\r\n                  placeholder=\"Midddle Text\"\r\n                  name=\"middleText\"\r\n                  value={this.state.middleText}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <input\r\n                  placeholder=\"from top\"\r\n                  type=\"number\"\r\n                  name=\"top2\"\r\n                  step=\"5\"\r\n                  value={this.state.top2}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <input\r\n                  placeholder=\"from left\"\r\n                  type=\"number\"\r\n                  step=\"5\"                  \r\n                  name=\"left2\"\r\n                  value={this.state.left2}\r\n                  onChange={this.handleChange}\r\n               /> \r\n               <input\r\n                  placeholder=\"font size\"\r\n                  type=\"number\"\r\n                  step=\"2\"\r\n                  name=\"size2\"\r\n                  value={this.state.size2}\r\n                  onChange={this.handleChange}\r\n               />  \r\n               <input\r\n                  type=\"color\"\r\n                  name=\"color2\"\r\n                  value={this.state.color2}\r\n                  onChange={this.handleChange}\r\n               />  \r\n               <input\r\n                  className=\"text3\"\r\n                  type=\"text\"\r\n                  placeholder=\"Bottom Text\"\r\n                  name=\"bottomText\"\r\n                  value={this.state.bottomText}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <input\r\n                  placeholder=\"from top\"\r\n                  type=\"number\"\r\n                  step=\"5\"\r\n                  name=\"top3\"\r\n                  value={this.state.top3}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <input\r\n                  placeholder=\"from left\"\r\n                  type=\"number\"\r\n                  step=\"5\"\r\n                  name=\"left3\"\r\n                  value={this.state.left3}\r\n                  onChange={this.handleChange}\r\n               />    \r\n               <input\r\n                  placeholder=\"font size\"\r\n                  type=\"number\"\r\n                  step=\"2\"\r\n                  name=\"size3\"\r\n                  value={this.state.size3}\r\n                  onChange={this.handleChange}\r\n               />  \r\n               <input\r\n                  type=\"color\"\r\n                  name=\"color3\"\r\n                  value={this.state.color3}\r\n                  onChange={this.handleChange}\r\n               />        \r\n            </form>\r\n            <div className=\"meme-container\">\r\n               <img src={this.state.randomImage} alt=\"Meme\" />\r\n               <h1 style={styles1} className=\"h1\">{this.state.topText}</h1>\r\n               <h1 style={styles2} className=\"h2\">{this.state.middleText}</h1>\r\n               <h1 style={styles3} className=\"h2\">{this.state.bottomText}</h1>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default MemeGenerator\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n// class MemeGenerator extends Component {\r\n//    constructor() {\r\n//       super()\r\n//       this.state = {\r\n//          xoffset1: 0,\r\n//          yoffset1: 0,\r\n//          xoffset2: 0,\r\n//          yoffset2: 0,\r\n//          delta: 20,\r\n//          header: \"\"\r\n//       }\r\n//       let xoffset = \"\"\r\n//       let yoffset = \"\"\r\n\r\n//      // this.handleChange = this.handleChange.bind(this)\r\n//       this.handleOnClick = this.handleOnClick.bind(this)\r\n//    }\r\n\r\n// // Create state\r\n\r\n\r\n// handleOnClick(event){\r\n//    const {id} = event.target\r\n//    this.setState({\r\n//       header: id\r\n//    })\r\n//    }\r\n// }\r\n\r\n// moveTitleToDown1 = () => {\r\n//    this.state.header===\"one\"\r\n//    ?\r\n// \tthis.setState(\r\n// \t{ yoffset1: this.state.yoffset1\r\n// \t\t+ this.state.delta })\r\n//    :\r\n//    this.setState(\r\n//    { yoffset2: this.state.yoffset2\r\n//       + this.state.delta })\r\n// };\r\n\r\n// moveTitleToRight1 = () => {\r\n//    this.state.header===\"one\"\r\n//    ?\r\n// \tthis.setState(\r\n// \t{ xoffset1: this.state.xoffset1\r\n// \t\t+ this.state.delta })\r\n//    :\r\n//    this.setState(\r\n//    { xoffset2: this.state.xoffset2\r\n//       + this.state.delta })\r\n// };\r\n\r\n// moveTitleToLeft1 = () => {\r\n//    this.state.header===\"one\"\r\n//    ?\r\n// \tthis.setState(\r\n// \t{ xoffset1: this.state.xoffset1\r\n// \t\t- this.state.delta })\r\n//    :\r\n//    this.setState(\r\n//    { xoffset2: this.state.xoffset2\r\n//       - this.state.delta })\r\n// };\r\n\r\n// moveTitleToUp1 = () => {\r\n//    this.state.header===\"one\"\r\n//    ?\r\n// \tthis.setState(\r\n// \t{ yoffset1: this.state.yoffset1\r\n// \t\t- this.state.delta })\r\n//    :\r\n//    this.setState(\r\n//    { yoffset2: this.state.yoffset2\r\n//       - this.state.delta })\r\n// };\r\n\r\n// render() {\r\n// \treturn (\r\n// \t<div>\r\n// \t\t{/* Element to Move Dynamically */}\r\n// \t\t<h2\r\n//       id=\"one\"\r\n//       onclick={this.handleOnClick}\r\n// \t\tstyle={{\r\n// \t\t\tposition: \"absolute\",\r\n// \t\t\tleft: `${this.state.xoffset1}px`,\r\n// \t\t\ttop: `${this.state.yoffset1}px`,\r\n// \t\t}}\r\n// \t\t>\r\n// \t\tGeeksforGeeks\r\n// \t\t</h2>\r\n//       <h2\r\n//       id=\"two\"\r\n//       onclick={this.handleOnClick}\r\n// \t\tstyle={{\r\n// \t\t\tposition: \"absolute\",\r\n// \t\t\tleft: `${this.state.xoffset2}px`,\r\n// \t\t\ttop: `${this.state.yoffset2}px`,\r\n// \t\t}}\r\n// \t\t>\r\n// \t\tHey buddy\r\n// \t\t</h2>\r\n\r\n// \t\t{/* Move Controls */}\r\n// \t\t<div style={{ marginTop: \"80px\" }}>\r\n// \t\t<button onClick={this.moveTitleToRight}>\r\n// \t\t\tMove Title To Right\r\n// \t\t</button>\r\n// \t\t<button onClick={this.moveTitleToDown}>\r\n// \t\t\tMove Title To Down\r\n// \t\t</button>\r\n// \t\t<button onClick={this.moveTitleToLeft}>\r\n// \t\t\tMove Title To Left\r\n// \t\t</button>\r\n// \t\t<button onClick={this.moveTitleToUp}>\r\n// \t\t\tMove Title To Up\r\n// \t\t</button>\r\n// \t\t</div>\r\n// \t</div>\r\n// \t);\r\n// }\r\n\r\n\r\n// export default MemeGenerator;\r\n","import Header from '../components/Header'\nimport MemeGenerator from '../components/MemeGenerator'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}